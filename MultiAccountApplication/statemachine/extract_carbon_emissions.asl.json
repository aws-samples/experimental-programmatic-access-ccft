{
    "Comment": "A state machine that extracts carbon emissions data",
    "StartAt": "GetAccountIDs",
    "States": {
        "GetAccountIDs": {
            "Type": "Task",
            "Resource": "${GetAccountIDsFunctionArn}",
            "Catch": [
                {
                  "ErrorEquals": ["States.ALL"],
                  "Next": "HandleError"
                }
            ],
            "Next": "CheckFirstInvocation"
        },
        "CheckFirstInvocation": {
            "Type": "Task",
            "Resource": "${CheckFirstInvocationFunctionArn}",
            "ResultPath": "$.SecondStateResult",
            "Next": "Choice: First Invocation"
        },
        "Choice: First Invocation": {
            "Type": "Choice",
            "InputPath": "$", 
            "Choices": [
                {
                  "Variable": "$.SecondStateResult.isEmpty",
                  "BooleanEquals": true,
                  "Next": "ProcessAccounts-Backfill"
                },
                {
                    "Variable": "$.SecondStateResult.isEmpty",
                    "BooleanEquals": false,
                    "Next": "ExtractCarbonEmissions-Payer"
                }
            ]
        },
        "ProcessAccounts-Backfill": {
            "Type": "Map",
            "InputPath": "$.account_ids",
            "ItemProcessor": {
                "ProcessorConfig": {
                "Mode": "INLINE"
                },
                "StartAt": "ExtractCarbonEmissions-Backfill",
                "States": {
                    "ExtractCarbonEmissions-Backfill": {
                        "Type": "Task",
                        "Resource": "${BackfillDataFunctionArn}",
                    "End": true,
                    "Catch": [
                        {
                          "ErrorEquals": ["States.ALL"],
                          "Next": "HandleError-Process Accounts1"
                        }
                      ]
                    },
                    "HandleError-Process Accounts1": {
                        "Type": "Pass",
                        "Result": "The ProcessAccounts Lambda function failed.",
                        "End": true
                    }
                }
            },
            "ResultSelector": {"Accounts processed":"Done"},
            "ResultPath": "$.result",
            "Next": "CreateAthenaTableView"
        },
        "CreateAthenaTableView": {
            "Type": "Task",
            "Resource": "${CreateAlterAthenaViewFunctionArn}",
            "ResultPath": "$.athena",
            "Next": "ExtractCarbonEmissions-Payer"
        },
        "ExtractCarbonEmissions-Payer": {
            "Type": "Task",
            "InputPath": "$.account_id",
            "Resource": "${ExtractCarbonEmissionsFunctionArn}",
            "Catch": [
                {
                  "ErrorEquals": ["States.ALL"],
                  "Next": "HandleError"
                }
            ],
            "Next": "Choice: New Data Available",
            "ResultPath": "$.FourthStateResult"
        },
        "Choice: New Data Available": {
            "Type": "Choice",
            "Choices": [
                {
                  "Variable": "$.FourthStateResult.isDataAvailable",
                  "BooleanEquals": true,
                  "Next": "ProcessAccounts"
                },
                {
                    "Variable": "$.FourthStateResult.isDataAvailable",
                    "BooleanEquals": false,
                    "Next": "RetryLambdaDaily"
                }
            ],
            "OutputPath": "$"
        },
        "RetryLambdaDaily": {
            "Type": "Wait",
            "Seconds": 86400,
            "Next": "ExtractCarbonEmissions-Payer"
        },
        "ProcessAccounts": {
            "Type": "Map",
            "InputPath": "$.account_ids",
            "ItemProcessor": {
                "ProcessorConfig": {
                "Mode": "INLINE"
                },
                "StartAt": "ExtractCarbonEmissions-All",
                "States": {
                    "ExtractCarbonEmissions-All": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::lambda:invoke",
                        "OutputPath": "$.Payload.message",
                        "Parameters": {
                            "Payload.$": "$",
                            "FunctionName": "${ExtractCarbonEmissionsFunctionArn}"
                        },
                    "End": true,
                    "Catch": [
                        {
                          "ErrorEquals": ["States.ALL"],
                          "Next": "HandleError-Process Accounts"
                        }
                      ]
                    },
                    "HandleError-Process Accounts": {
                        "Type": "Pass",
                        "ResultPath": "$.message",
                        "Result": "Check that you have the necessary permissions and the role exists.",
                        "End": true
                    }
                }
            },
            "Next": "CreateAlterAthenaView"
        },
        "CreateAlterAthenaView": {
            "Type": "Task",
            "Resource": "${CreateAlterAthenaViewFunctionArn}",
            "End": true
        },
        "HandleError": {
            "Type": "Pass",
            "End": true
        }
    }
}
  